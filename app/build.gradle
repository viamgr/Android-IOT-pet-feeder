
plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'kotlin-android-extensions'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id 'androidx.navigation.safeargs.kotlin'
}
android {

    compileSdkVersion 30
    buildToolsVersion "30.0.3"
    ndkVersion "21.4.7075529"

    defaultConfig {
        applicationId "com.viam.feeder"
        minSdkVersion 19
        targetSdkVersion 30
        versionCode 1
        versionName "1.0"
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        multiDexEnabled true
        packagingOptions {
            pickFirst '**/*.so'
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // Specifies one flavor dimension.
    flavorDimensions "version"

    productFlavors {
        fake {
            dimension "version"
        }
        webApi {
            dimension "version"
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_11
        targetCompatibility JavaVersion.VERSION_11
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    buildFeatures {
        dataBinding true
    }
    kapt {
        correctErrorTypes = true
    }
    aaptOptions {
        ignoreAssetsPattern "!*ffprobe"
        ignoreAssetsPattern "!arm"
        ignoreAssetsPattern "!x86"
    }
    splits {
        abi {
            enable true
            reset()
            include 'armeabi-v7a'
            universalApk false
        }
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    implementation project(":data")
    implementation project(":network-availablity")
    implementation project(":domain")
    implementation project(":shared")
    implementation project(":binding")
    implementation project(":resource")
    implementation project(":websocket")
    implementation project(":PermissionContract")
    implementation 'com.android.support:multidex:1.0.3'

    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation 'androidx.core:core-ktx:1.6.0'
    implementation 'androidx.appcompat:appcompat:1.3.1'
    implementation 'com.google.android.material:material:1.4.0'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.1'
    implementation 'androidx.fragment:fragment-ktx:1.4.0-alpha05'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.3.5'
    implementation 'androidx.navigation:navigation-ui-ktx:2.3.5'
    implementation project(path: ':model')
    testImplementation 'junit:junit:`4.13.2`'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'


    def lifecycle_version = "2.3.1"

    // ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    // LiveData
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    // Lifecycles only (without ViewModel or LiveData)
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"

    // Saved state module for ViewModel
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"

    // alternately - if using Java8, use the following instead of lifecycle-compiler
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    implementation "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'
    // to use kotlin activity extensions for ViewModel
    implementation 'androidx.activity:activity-ktx:1.3.0'
    implementation 'androidx.hilt:hilt-navigation-fragment:1.0.0'



    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")

    implementation platform('com.google.firebase:firebase-bom:25.12.0')
    implementation 'com.google.firebase:firebase-analytics-ktx'
    implementation 'com.google.firebase:firebase-crashlytics-ktx'

    implementation 'com.airbnb.android:lottie:3.7.2'

    implementation "com.airbnb.android:epoxy:4.6.1"

    // Add the annotation processor if you are using Epoxy's annotations (recommended)
    kapt "com.airbnb.android:epoxy-processor:4.6.1"
    implementation 'com.airbnb.android:epoxy-databinding:4.6.1' // (or latest Epoxy version)

    def work_version = "2.5.0"

    // Kotlin + coroutines
    implementation "androidx.work:work-runtime-ktx:$work_version"

    /*Coroutines*/
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.5.1'

    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation 'com.squareup.okhttp3:logging-interceptor:4.9.1'
    implementation 'com.eightbitlab:blurview:1.6.5'

    implementation("io.coil-kt:coil:1.2.1")

    implementation "com.facebook.flipper:flipper:0.83.0"
    implementation "com.facebook.flipper:flipper-network-plugin:0.83.0"
    implementation "com.facebook.flipper:flipper-litho-plugin:0.83.0"
    implementation "com.facebook.soloader:soloader:0.10.1"
    implementation 'com.thanosfisherman.wifiutils:wifiutils:1.6.5'

}
