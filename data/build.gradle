plugins {
    id 'com.android.library'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
}

android {
    compileSdk 30

    defaultConfig {
        minSdk 16
        targetSdk 30
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }

    // Specifies one flavor dimension.
    flavorDimensions "version"

    productFlavors {
        fake {
            dimension "version"
        }
        webApi {
            dimension "version"
        }
    }
}

dependencies {

    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-core:1.5.1'

    implementation project(path: ':websocket')
    implementation project(path: ':domain')
    implementation project(path: ':model')

    api "com.google.dagger:hilt-android:2.38.1"
    kapt "com.google.dagger:hilt-android-compiler:2.38.1"
    kapt 'androidx.hilt:hilt-compiler:1.0.0'


    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:converter-moshi:2.9.0"
    implementation("com.squareup.moshi:moshi-kotlin:1.12.0")
    kapt("com.squareup.moshi:moshi-kotlin-codegen:1.12.0")

//    implementation 'com.arthenica:mobile-ffmpeg-full:4.4.LTS'

    def room_version = "2.3.0"

    api("androidx.room:room-runtime:$room_version")

    // To use Kotlin annotation processing tool (kapt)
    kapt("androidx.room:room-compiler:$room_version")

    // optional - Kotlin Extensions and Coroutines support for Room
    api("androidx.room:room-ktx:$room_version")

}